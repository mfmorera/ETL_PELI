# -*- coding: utf-8 -*-
"""PeliculasETL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iUM8MVtECR_cbRi2pPHSlqDKHO6o9JR0
"""

!pip install pandas

# Paso 1: Importar librerías
import pandas as pd
from google.colab import files

# Paso 2: Subir archivos CSV desde tu equipo
uploaded = files.upload()  # Subir 'movies.csv' y 'ratings.csv'

# Paso 3: Funciones para extraer datos
def extract_movies(file_path):
    return pd.read_csv(file_path)

def extract_ratings(file_path):
    return pd.read_csv(file_path)

# Paso 4: Transformar los datos
def transform_data(movies_df, ratings_df):
    # Validar que las columnas necesarias estén presentes
    if not {'movieId', 'title', 'genres'}.issubset(movies_df.columns):
        raise ValueError("El archivo movies.csv debe contener las columnas: 'movieId', 'title', 'genres'")
    if not {'userId', 'movieId', 'rating', 'timestamp'}.issubset(ratings_df.columns):
        raise ValueError("El archivo ratings.csv debe contener las columnas: 'userId', 'movieId', 'rating', 'timestamp'")

    # Calcular promedio de rating por película
    avg_ratings = ratings_df.groupby('movieId')['rating'].mean().reset_index()
    avg_ratings.rename(columns={'rating': 'average_rating'}, inplace=True)

    # Unir con los datos de películas
    merged = pd.merge(movies_df, avg_ratings, on='movieId')

    # Filtrar películas con promedio mayor a 4
    high_rated = merged[merged['average_rating'] > 4.0]

    # Ordenar por rating descendente
    high_rated_sorted = high_rated.sort_values(by='average_rating', ascending=False)

    # Seleccionar columnas relevantes
    result = high_rated_sorted[['movieId', 'title', 'genres', 'average_rating']]

    return result

# Paso 5: Guardar resultados como nuevo archivo CSV
def load_data(result_df, filename='peliculas_procesadas.csv'):
    result_df.to_csv(filename, index=False)
    print(f"✅ Archivo guardado como: {filename}")
    return filename

# Paso 6: Ejecutar el pipeline ETL
movies = extract_movies("movies (9).csv")
ratings = extract_ratings("ratings (8).csv")
result_df = transform_data(movies, ratings)
output_file = load_data(result_df)

import pandas as pd
df_resultado = pd.read_csv("peliculas_procesadas.csv")
df_resultado.head()

import pandas as pd

# Cargar los archivos originales
movies = pd.read_csv("movies.csv")
ratings = pd.read_csv("ratings.csv")

# Calcular el promedio de rating por película
average_ratings = ratings.groupby("movieId")["rating"].mean().reset_index()
average_ratings.rename(columns={"rating": "average_rating"}, inplace=True)

# Unir con tabla de películas
df_resultado = pd.merge(movies, average_ratings, on="movieId")

# Verificar el resultado
print(df_resultado.head())

# Guardar el DataFrame final con títulos y géneros
df_resultado.to_csv("peliculas_procesadas.csv", index=False)